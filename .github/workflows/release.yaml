on:
  push:
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
  
name: Release

jobs:
  build:
    name: Build
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Nuget.exe
        uses: warrenbuckley/Setup-Nuget@v1
      - name: Restore packages
        run: nuget restore DailyStatus.sln
      - name: Setup MSBuild.exe
        uses: warrenbuckley/Setup-MSBuild@v1
      - name: Build with MSBuild
        run: msbuild DailyStatus.sln -p:Configuration=Release -p:OutDir="/${{ github.ref }}/"
      - uses: actions/upload-artifact@master
        with:
          name: DailyStatus
          path: /${{ github.ref }}/
  release:
    name: Create release and upload asset
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      - uses: actions/download-artifact@v1
        with:
          name: DailyStatus
          path: ./${{ github.ref }}/
      - uses: montudor/action-zip@v0.1.0
        with:
          args: zip -qq -r ./DailyStatus-${{ steps.get_version.outputs.VERSION }}.zip ./${{ github.ref }}/
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./DailyStatus-${{ steps.get_version.outputs.VERSION }}.zip
          asset_name: DailyStatus-${{ steps.get_version.outputs.VERSION }}.zip
          asset_content_type: application/zip